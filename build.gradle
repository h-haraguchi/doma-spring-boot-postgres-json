buildscript {
    ext {
        kotlinVersion = '1.2.71'
        springBootVersion = '2.1.1.RELEASE'
        domaVeresion = '2.19.0'
        domaSpringBootVersion = '1.1.1'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
    }
}

apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'kotlin-kapt'

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8
compileKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "1.8"
    }
}

repositories {
    mavenCentral()
}

processResources.destinationDir = compileJava.destinationDir
compileJava.dependsOn processResources
compileKotlin.dependsOn processResources

kapt {
    arguments {
        arg("doma.resources.dir", processResources.destinationDir)
    }
}

dependencies {
    implementation('org.springframework.boot:spring-boot-starter')
    implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlinVersion}")
    implementation("org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}")
    testImplementation('org.springframework.boot:spring-boot-starter-test')

    runtimeOnly('org.postgresql:postgresql')

    implementation("org.seasar.doma.boot:doma-spring-boot-starter:${domaSpringBootVersion}")
    implementation("org.seasar.doma:doma:${domaVeresion}")

    kapt "org.seasar.doma:doma:${domaVeresion}"
}
